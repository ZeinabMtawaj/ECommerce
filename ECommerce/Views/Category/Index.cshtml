
@{
    ViewData["Title"] = "CategoryManagement";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@model IEnumerable<CategoryViewModel> 





<!-- Button -->
<div class="w-32 d-flex justify-content-center ml-auto">
	<a class = "d-flex mt-3" asp-controller="@ViewBag.createController" asp-action="@ViewBag.createAction">
		<span class="btn btn-primary btn-round ml-auto mb-3" data-toggle="modal" data-target="#addRowModal">
			<i class="fa fa-plus"></i>
			Create
		</span>
	</a>
</div>

	
<!-- Table -->
<div class="table-responsive">
	<table id="add-row" class="display table table-striped table-hover text-center" cellspacing="0" width="100%">
		<thead>
			<tr>
				@foreach(var col in ViewBag.cols){
					<th>@col</th>
				}
				<th>Action</th>
			</tr>
		</thead>
		<tfoot>
			<tr></tr>
		</tfoot>
		<tbody>
		@if(Model != null && Model.Count() > 0)
		{
					
			@foreach(var item in Model)
			{
				<tr>
					<td>
						<div class="p-1">
							<img class="w-16 h-16" src="@item.Image">
						</div>
					</td>
					<td>
						@item.Name
					</td>
					<td class="overflow-auto">
						@item.Description
					</td>
					<td>
						<span class="specPartialCaller btn border-0" data-toggle="modal" data-target="#specsMainModel" item-id="@item.Id"> 
							<i class='fas fa-angle-down text-primary text-3xl'></i>
						</span>
					</td>
					<td>
						@if(item.CreatedDate != null){
							@item.CreatedDate.ToString("g");
						}
						else
						{
							@Html.Raw("No Date")
						}
					</td>
					<td>
						@if(item.UpdatedDate != null){
							@item.UpdatedDate.ToString("g");
						}
						else
						{
							@Html.Raw("No Date")
						}
					</td>
					<td>
						<div class="form-button-action">
							<a asp-controller="@ViewBag.editController" asp-action="@ViewBag.editAction" asp-route-id="@item.Id">
								<button type="button" data-toggle="tooltip" data-placement="top" title="Edit" class="btn btn-link btn-simple-primary btn-lg" data-original-title="Edit Task">
									<i class="fa fa-edit"></i>
								</button>
							</a>
									
							<span data-toggle="modal" data-target=@("#deleteModal" + @item.Id.ToString()) item-target = "@item.Id">
								<button data-toggle="tooltip" data-placement="top" title="Remove" class="btn btn-link btn-simple-danger mt-1"> 
									<i class="fa fa-times"></i>       
								</button>
							</span>




							<div id=@("deleteModal" + @item.Id.ToString()) class="modal fade">
								<div class="modal-dialog modal-confirm">
									<div class="modal-content">
										<div class="modal-header flex-column">
											<div class="icon-box">
												<i class="material-icons">&#xE5CD;</i>
											</div>						
											<h4 class="modal-title w-100">Are you sure?</h4>	
											<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
										</div>
										<div class="modal-body">
											<p>Do you really want to delete? This process cannot be undone.</p>
										</div>
										<div class="modal-footer justify-content-center">
											<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
											<form method="post" asp-controller="@ViewBag.deleteController" asp-action="@ViewBag.deleteAction">
												<input name="Id" value="@item.Id" hidden>
												<button type="submit" class="btn btn-danger">Delete</button>
											</form>
										</div>
									</div>
								</div>
							</div>  
						</div>
					</td>
				</tr>
			}
		}
		</tbody>
	</table>
	<div class="modal fade" id="specsMainModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	    <div class="modal-dialog" role="document">
		    <div class="modal-content">
			    <div class="modal-header">
				    <h5 class="modal-title font-weight-bold" id="exampleModalLabel"> Specifications</h5>
				    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
					    <span aria-hidden="true">&times;</span>
				    </button>
			    </div>
			    <div class="modal-body overflow-auto">
				    <div>
                            <input id="searchbox" class="search__input " type="text" placeholder="Search">
                                              
                    </div>
                    <div id="specPartial-0" class="card mt-2 rounded">
                                   
                        </div>

			    </div>
			    <div class="modal-footer">
				    <button type="button" class="btn btn-primary" data-dismiss="modal">Done</button>
			    </div>
		    </div>
	    </div>
    </div>
</div>

@section Scripts{
	<script>
		$('#add-row').DataTable({
			"pageLength": 5,
		});


	</script>

	<script>
		let cards;
        function liveSearch() {
            let search_query = document.getElementById("searchbox").value;
            //Use innerText if all contents are visible
            //Use textContent for including hidden elements
            for (var i = 0; i < cards.length; i++) {
                if(cards[i].textContent.toLowerCase()
                        .includes(search_query.toLowerCase())) {
                    cards[i].classList.remove("d-none");
                } else {
                    cards[i].classList.add("d-none");
                }
            }
        }
        let typingTimer;               
        let typeInterval = 200;  
        let searchInput = document.getElementById('searchbox');
        searchInput.addEventListener('keyup', () => {
            clearTimeout(typingTimer);
            typingTimer = setTimeout(liveSearch, typeInterval);
        });
    </script>
    <script>
		function specsConfigure(){
			cards = document.querySelectorAll('.box');
            $(".inp-coll").bind('keyup', (event) => {
                let id = "#" + $(event.target).attr('id');
                let conId = id.replace('inp', 'con');
                if($(event.target).val())
                    $(conId).addClass('border-l-8');
                else
                    $(conId).removeClass('border-l-8');
            });

            $(".inp-coll").each(function(){
                let id = "#" + $(this).attr('id');
                let conId = id.replace('inp', 'con');
                if($(id).val())
                    $(conId).addClass('border-l-8');
                else
                    $(conId).removeClass('border-l-8');
            })
        }

        $(".specPartialCaller").click(function(){
                let specPartialId = "#specPartial-0";
                let specPartial = $(specPartialId);
				let catId = $(this).attr("item-id");
                $.ajax({  
                    type: "GET",  
                    url: '/Category/GetSpecs',  
                    data: {"catId" : catId},
                    success: function(data){
                     $(specPartialId).html(data);
                     specsConfigure();
                    },
                    error: function(xhr, status, error) {
                        alert(status);
                    }
                });
        });

    </script>
}
